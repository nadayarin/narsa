{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../_services/user.service\";\nimport * as i3 from \"@angular/router\";\nexport let ResetPasswordComponent = /*#__PURE__*/(() => {\n  class ResetPasswordComponent {\n    constructor(formBuilder, userService, router) {\n      this.formBuilder = formBuilder;\n      this.userService = userService;\n      this.router = router;\n      this.errorMessage = '';\n      this.resetPasswordForm = this.formBuilder.group({\n        oldPassword: ['', Validators.required],\n        newPassword: ['', [Validators.required, Validators.minLength(6)]],\n        confirmPassword: ['', Validators.required]\n      }, {\n        validator: this.mustMatch('newPassword', 'confirmPassword')\n      });\n    }\n    mustMatch(password, confirmPassword) {\n      return formGroup => {\n        const control = formGroup.controls[password];\n        const matchingControl = formGroup.controls[confirmPassword];\n        if (matchingControl.errors && !matchingControl.errors['mustMatch']) {\n          return;\n        }\n        if (control.value !== matchingControl.value) {\n          matchingControl.setErrors({\n            mustMatch: true\n          });\n        } else {\n          matchingControl.setErrors(null);\n        }\n      };\n    }\n    onSubmit() {\n      if (this.resetPasswordForm.invalid) {\n        return;\n      }\n      const {\n        oldPassword,\n        newPassword\n      } = this.resetPasswordForm.value;\n      this.userService.resetPassword(oldPassword, newPassword).subscribe(() => {\n        this.router.navigate(['/login']); // Redirect after success\n      }, error => {\n        this.errorMessage = 'Error resetting password. Please try again.';\n      });\n    }\n    static #_ = this.ɵfac = function ResetPasswordComponent_Factory(t) {\n      return new (t || ResetPasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ResetPasswordComponent,\n      selectors: [[\"app-reset-password\"]],\n      decls: 2,\n      vars: 0,\n      template: function ResetPasswordComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"reset-password works!\");\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [\".reset-password-container[_ngcontent-%COMP%]{width:300px;margin:auto}label[_ngcontent-%COMP%]{display:block;margin-bottom:5px}input[_ngcontent-%COMP%]{width:100%;padding:8px;margin-bottom:10px}button[_ngcontent-%COMP%]{width:100%;padding:10px;background-color:#4caf50;color:#fff;border:none;cursor:pointer}button[_ngcontent-%COMP%]:disabled{background-color:#ccc;cursor:not-allowed}\"]\n    });\n  }\n  return ResetPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}