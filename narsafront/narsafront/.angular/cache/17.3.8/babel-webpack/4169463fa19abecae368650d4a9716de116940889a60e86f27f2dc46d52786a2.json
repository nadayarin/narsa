{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/user.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ResetPasswordComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Old password is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" New password is required and must be at least 6 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Passwords must match. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nexport let ResetPasswordComponent = /*#__PURE__*/(() => {\n  class ResetPasswordComponent {\n    constructor(userService) {\n      this.userService = userService;\n      this.oldPassword = '';\n      this.newPassword = '';\n      this.confirmPassword = '';\n      this.errorMessage = '';\n      this.successMessage = '';\n    }\n    resetPassword() {\n      if (this.newPassword !== this.confirmPassword) {\n        this.errorMessage = 'New passwords do not match';\n        return;\n      }\n      this.userService.resetPassword(this.oldPassword, this.newPassword).subscribe({\n        next: () => {\n          this.successMessage = 'Password reset successfully!';\n          this.errorMessage = ''; // Clear any previous error message\n        },\n        error: err => {\n          this.errorMessage = 'Error resetting password. Please try again.';\n          this.successMessage = ''; // Clear any previous success message\n          console.error('Error:', err); // Log the error for debugging\n        }\n      });\n    }\n    static #_ = this.ɵfac = function ResetPasswordComponent_Factory(t) {\n      return new (t || ResetPasswordComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ResetPasswordComponent,\n      selectors: [[\"app-reset-password\"]],\n      decls: 20,\n      vars: 6,\n      consts: [[1, \"reset-password-container\"], [3, \"ngSubmit\", \"formGroup\"], [\"for\", \"oldPassword\"], [\"id\", \"oldPassword\", \"type\", \"password\", \"formControlName\", \"oldPassword\"], [4, \"ngIf\"], [\"for\", \"newPassword\"], [\"id\", \"newPassword\", \"type\", \"password\", \"formControlName\", \"newPassword\"], [\"for\", \"confirmPassword\"], [\"id\", \"confirmPassword\", \"type\", \"password\", \"formControlName\", \"confirmPassword\"], [\"type\", \"submit\", 3, \"disabled\"]],\n      template: function ResetPasswordComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function ResetPasswordComponent_Template_form_ngSubmit_1_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(2, \"div\")(3, \"label\", 2);\n          i0.ɵɵtext(4, \"Old Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(5, \"input\", 3);\n          i0.ɵɵtemplate(6, ResetPasswordComponent_div_6_Template, 2, 0, \"div\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"div\")(8, \"label\", 5);\n          i0.ɵɵtext(9, \"New Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 6);\n          i0.ɵɵtemplate(11, ResetPasswordComponent_div_11_Template, 2, 0, \"div\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\")(13, \"label\", 7);\n          i0.ɵɵtext(14, \"Confirm New Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"input\", 8);\n          i0.ɵɵtemplate(16, ResetPasswordComponent_div_16_Template, 2, 0, \"div\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"button\", 9);\n          i0.ɵɵtext(18, \"Reset Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(19, ResetPasswordComponent_div_19_Template, 2, 1, \"div\", 4);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"formGroup\", ctx.resetPasswordForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.resetPasswordForm.controls[\"oldPassword\"].invalid && ctx.resetPasswordForm.controls[\"oldPassword\"].touched);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.resetPasswordForm.controls[\"newPassword\"].invalid && ctx.resetPasswordForm.controls[\"newPassword\"].touched);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.resetPasswordForm.controls[\"confirmPassword\"].invalid && ctx.resetPasswordForm.controls[\"confirmPassword\"].touched);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.resetPasswordForm.invalid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        }\n      },\n      dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n      styles: [\".reset-password-container[_ngcontent-%COMP%]{width:300px;margin:auto}label[_ngcontent-%COMP%]{display:block;margin-bottom:5px}input[_ngcontent-%COMP%]{width:100%;padding:8px;margin-bottom:10px}button[_ngcontent-%COMP%]{width:100%;padding:10px;background-color:#4caf50;color:#fff;border:none;cursor:pointer}button[_ngcontent-%COMP%]:disabled{background-color:#ccc;cursor:not-allowed}\"]\n    });\n  }\n  return ResetPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}